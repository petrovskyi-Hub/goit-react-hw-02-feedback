{"version":3,"sources":["Feedback/Statistics/Statistics.module.css","Feedback/FeedbackOptions.module.css","Feedback/Notification/Notification.module.css","Feedback/FeedbackOptions.js","Feedback/Notification/Notification.js","Feedback/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","optionsList","map","option","optionItem","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","list","listItem","App","state","handleFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,kBCA7DD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,WAAa,sC,oBCAlFD,EAAOC,QAAU,CAAC,QAAU,gC,+LCGb,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/C,OACI,oBAAIC,UAAWC,IAAEC,YAAjB,SACIJ,EAAQK,KAAI,SAAAC,GAAM,OACf,oBAAiBJ,UAAWC,IAAEI,WAA9B,SACK,wBAAQC,KAAK,SAASC,QAAS,kBAAMR,EAAgBK,IAArD,SAA+DA,KAD3DA,Q,oCCLT,SAASI,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAClC,OACI,mBAAGT,UAAWC,IAAEQ,QAAhB,SAA0BA,ICAnB,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC5D,OACI,sBAAKf,UAAU,aAAf,UACI,4CAECc,EAAQ,EACH,qBAAId,UAAWC,IAAEe,KAAjB,UACE,6BAAI,oBAAGhB,UAAWC,IAAEgB,SAAhB,mBAAiCN,OACrC,6BAAI,oBAAGX,UAAWC,IAAEgB,SAAhB,sBAAoCL,OACxC,6BAAI,oBAAGZ,UAAWC,IAAEgB,SAAhB,kBAAgCJ,OACpC,6BAAI,oBAAGb,UAAWC,IAAEgB,SAAhB,oBAAkCH,OACtC,6BAAI,oBAAGd,UAAWC,IAAEgB,SAAhB,gCAA8CF,EAA9C,YAEN,cAACP,EAAD,CAAcC,QAAQ,yB,IC0CzBS,E,4MAtDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiB,SAAChB,GAChB,EAAKiB,UAAS,SAAAC,GAAS,sBAAQlB,EAASkB,EAAUlB,GAAU,O,EAG9DmB,mBAAqB,WAKnB,OAJiB,EAAKJ,MAAdR,KACY,EAAKQ,MAAjBP,QACQ,EAAKO,MAAbN,K,EAKVW,gCAAkC,WAAO,IAC/Bb,EAAS,EAAKQ,MAAdR,KACAC,EAAY,EAAKO,MAAjBP,QACAC,EAAQ,EAAKM,MAAbN,IAER,OAAOY,KAAKC,MAAMf,GAAQA,EAAOC,EAAUC,GAAO,M,uDAI1C,IACAF,EAASgB,KAAKR,MAAdR,KACAC,EAAYe,KAAKR,MAAjBP,QACAC,EAAQc,KAAKR,MAAbN,IAER,OACE,sBAAKb,UAAU,MAAf,UACE,uDACA,cAACH,EAAD,CACEC,QAAS8B,OAAOC,KAAKF,KAAKR,OAC1BpB,gBAAiB4B,KAAKP,iBAGxB,cAACV,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKJ,qBACZR,mBAAoBY,KAAKH,2C,GA9CjBM,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c1859cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1FNC_\",\"listItem\":\"Statistics_listItem__3DRWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsList\":\"FeedbackOptions_optionsList__3coGw\",\"optionItem\":\"FeedbackOptions_optionItem__394-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__15Uol\"};","import PropTypes from 'prop-types';\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <ul className={s.optionsList}>\r\n           {options.map(option => (\r\n               <li key={option} className={s.optionItem}>\r\n                    <button type='button' onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n                </li> \r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({message}) {\r\n    return (\r\n        <p className={s.message}>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from \"./Statistics.module.css\";\r\nimport Notification from '../Notification/Notification'\r\n\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <div className=\"Statistics\">            \r\n            <h2>Statistics</h2>\r\n            \r\n            {total > 0\r\n                ? <ul className={s.list}>\r\n                    <li><p className={s.listItem}>Good: {good}</p></li>\r\n                    <li><p className={s.listItem}>Neutral: {neutral}</p></li>\r\n                    <li><p className={s.listItem}>Bad: {bad}</p></li>\r\n                    <li><p className={s.listItem}>Total: {total}</p></li>\r\n                    <li><p className={s.listItem}>Positive feedback: {positivePercentage}%</p></li>\r\n                </ul>\r\n                : <Notification message=\"No feedback given\"></Notification>\r\n            }\r\n        </div>\r\n    )\r\n            \r\n}\r\n\r\nStatistics.propTypes = {\r\n    good:PropTypes.number.isRequired,\r\n    neutral:PropTypes.number.isRequired,\r\n    bad:PropTypes.number.isRequired,\r\n    total:PropTypes.number.isRequired,\r\n    positivePercentage:PropTypes.number.isRequired,\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Feedback/Statistics/Statistics'\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  handleFeedback = (option) => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }))\n  }\n\n  countTotalFeedback = () => {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n\n    return Math.round(good / (good + neutral + bad) * 100);\n  }\n\n    \n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n  \n    return (\n      <div className=\"App\">\n        <h1>Please leave feedback</h1>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleFeedback}>\n        </FeedbackOptions>\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        >\n        </Statistics>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}